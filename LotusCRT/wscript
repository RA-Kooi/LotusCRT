#!/usr/bin/env python3
# encoding: utf-8
# vim: sw=4 ts=4 noexpandtab

import os

def configure(cfg):
	cfg.env.CFLAGS_LotusCRTFlags = \
		[
			'/Zp8' # Pack structs to an 8 byte boundary
		]

	if 'CC_NAME_SECONDARY' in cfg.env:
		cfg.env.CFLAGS_LotusCRTFlags += \
			[
				'-Wno-dollar-in-identifier-extension',
				'-Wno-language-extension-token'
			]

	cfg.env.CXXFLAGS_LotusCRTFlags = cfg.env.CFLAGS_LotusCRTFlags

	# Just check that we have ntdll.lib, _lotuscrt.h will make sure it's linked
	cfg.check_lib_msvc(libname='ntdll', uselib_store='ntdll')
	cfg.env.SYSINCLUDES_phnt = [os.path.abspath('external/phnt')]
	cfg.env.DEFINES_phnt = \
		[
			'PHNT_MODE=1', # Kernel mode
			'PHNT_VERSION=61' # Win7
		]
#enddef

def build(bld):
	includes = \
		[
			'include',
			'src/include',
			'src/include/windows', # For windows.h which wants excpt.h
			'../LotusStdC/include'
		]

	uselib = ['LotusCRTFlags', 'phnt', 'MSVC']

	x64AsmSources = ['src/windows/gs_handler.s']
	x86AsmSources = []
	x64Sources = ['src/windows/c_seh_handler.c']
	x86Sources = []
	if not bld.env.DEST_CPU == 'amd64':
		x64AsmSources = []
		x86AsmSources = ['src/windows/64bit_shift.s', 'src/windows/c_seh_handler4.s']
		x64Sources = []
		x86Sources = ['src/windows/c_seh_handler4.c']

	bld.objects(
		name='LotusCRTAsm',
		source=
			[
				'src/windows/gs_check.s',
				'src/windows/nlg_support.s'
			] + x64AsmSources + x86AsmSources)

	bld.objects(
		name='LotusCRTGS',
		includes=includes,
		source=['src/windows/gs_support.c'],
		cflags=['/GS-'],
		uselib=uselib)

	bld.stlib(
		name='LotusCRT',
		source=
			[
				'src/windows/entry_main.cpp',
				'src/windows/entry_wmain.cpp',
				'src/windows/vc_sections.c',
				'src/windows/seh_filters.c',
				'src/_Exit.c'
			] + x64Sources + x86Sources,
		target='LotusCRT',
		vnum='0.0.0',
		defines=
			[
				'NTDDI_VERSION=0x06010000', # Win7
				'_CRTBLD',
				'_MBCS',
				'_MT',
				'_RTC', # build support for /RTC
				'_WIN32_WINDOWS=0x0601', # Win7
				'_WIN32_WINNT=0x0601' # win7
			],
		includes=includes,
		lib=[],
		libpath=[],
		stlib=[],
		stlibpath=[],
		rpath=[],
		use=['LotusCRTAsm', 'LotusCRTGS'],
		uselib=uselib,
		features=[],
		export_system_includes=['include'],
		export_defines=['_MBCS', '_MT'])
#enddef
