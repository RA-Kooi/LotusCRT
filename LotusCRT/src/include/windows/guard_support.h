#ifndef __LOTUSCRT_GUARD_SUPPORT_H__
#define __LOTUSCRT_GUARD_SUPPORT_H__

#include <_lotuscrt.h>

#include <stdint.h>

#include <phnt_windows.h>
#include <phnt.h>

__LOTUSCRT_BEGIN_C_HEADER

typedef void (__fastcall *__LOTUSCRT_GUARD_CHECK_ROUTINE)(uintptr_t __target);

// Name generated by the MS linker.
extern void *volatile __guard_check_icall_fptr;

// This is a special function used by MSVC to check the integrity of a function
// pointer. MSVC replaces this function with an implementation if guard checks
// are enforced.
extern inline void __fastcall _Lotus_guard_check_call_nop(uintptr_t __target)
{
	__LOTUSCRT_UNUSED(__target);
	return;
}

extern inline int _guard_icall_checks_enforced(void)
{
	void *const guardCheckFunc = ReadPointerNoFence(&__guard_check_icall_fptr);
	return guardCheckFunc != (void*)_Lotus_guard_check_call_nop;
}

#define __LOTUSCRT_GUARD_CHECK_CALL(FPTR) \
	(((__LOTUSCRT_GUARD_CHECK_ROUTINE)(__guard_check_icall_fptr))((uintptr_t)(FPTR)))

__LOTUSCRT_END_C_HEADER

#endif // __LOTUSCRT_GUARD_SUPPORT_H__
